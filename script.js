document.addEventListener("DOMContentLoaded", () => {
  const tabs = document.querySelectorAll(".tabs button");
  const contents = document.querySelectorAll(".tab-content");

  tabs.forEach(tab => {
    tab.addEventListener("click", () => {
      const target = tab.dataset.tab;
      contents.forEach(c => c.style.display = "none");
      document.getElementById(target).style.display = "block";
    });
  });

  const egg = document.getElementById('egg');
  const pet = document.getElementById('pet-image');
  const hatchText = document.getElementById('hatch-text');
  const eggContainer = document.getElementById('egg-container');
  const petNameElement = document.getElementById('pet-name');

  let crackStage = 0;
  const maxCrackStage = 3;
  let isHatched = false;
  let scratches = 0; // –°–∫–æ–ª—å–∫–æ —Ü–∞—Ä–∞–ø–∏–Ω —Å–¥–µ–ª–∞–Ω–æ
  let rotation = 0; // –£–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ –ø–∏—Ç–æ–º—Ü–∞

  // –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏–º–µ–Ω –¥–ª—è –ø–∏—Ç–æ–º—Ü–µ–≤
  const petNames = [
    "–õ–∞–∫–∏", "–°–Ω–µ–∂–æ–∫", "–†–µ–∫—Å", "–ú–∏–ª–∞", "–ë–∞—Ä—Å–∏–∫", "–î–∂–µ–∫", "–õ—É–Ω–∞", "–°–∏–º–±–∞", "–ú–æ—Ä—Ñ–∏–ª–∏–Ω–∞", "–¢–æ–±–∏"
  ];

  // –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–∏—Ç–æ–º—Ü–µ–≤
  const petImages = [
    "pet_1.png",
    "pet_2.png",
    "pet_3.png",
    "pet_4.png",
    "pet_5.png",
    "pet_6.png"
  ];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∏–º—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
  let savedPetName = localStorage.getItem('petName');
  let savedPetImage = localStorage.getItem('petImage');

  if (!savedPetName || !savedPetImage) {
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    savedPetName = petNames[Math.floor(Math.random() * petNames.length)];
    savedPetImage = petImages[Math.floor(Math.random() * petImages.length)];

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
    localStorage.setItem('petName', savedPetName);
    localStorage.setItem('petImage', savedPetImage);
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è –ø–∏—Ç–æ–º—Ü–∞
  petNameElement.textContent = savedPetName;
  petNameElement.style.display = 'block';

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —è–π—Ü–∞ –¥–æ –≤—ã–ª—É–ø–ª–µ–Ω–∏—è
  pet.src = "egg_0.png";
  pet.style.display = 'block';

  if (savedPetName && savedPetImage) {
    // –ï—Å–ª–∏ –∏–º—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö
    petNameElement.textContent = savedPetName;
    petNameElement.style.display = 'block';
    pet.src = savedPetImage;
    pet.style.display = 'block';
    egg.style.display = 'none';
    isHatched = true;
  }

  function hatchEgg() {
    if (isHatched) return;
    isHatched = true;

    egg.style.display = 'none';

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
    pet.src = savedPetImage;
    pet.classList.add('show');

    if (hatchText) {
      hatchText.style.display = 'none';
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ü–∞—Ä–∞–ø–∏–Ω—ã
  function createScratch(x, y) {
    const scratch = document.createElement('div');
    scratch.className = 'scratch';
    scratch.style.left = `${x - eggContainer.offsetLeft - 15}px`;
    scratch.style.top = `${y - eggContainer.offsetTop - 15}px`;
    eggContainer.appendChild(scratch);

    setTimeout(() => {
      scratch.remove();
    }, 1000);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏ –∏–ª–∏ –ø–∞–ª—å—Ü–∞
  function handleMove(e) {
    if (isHatched) return;

    let x, y;
    if (e.touches) {
      x = e.touches[0].clientX;
      y = e.touches[0].clientY;
    } else {
      x = e.clientX;
      y = e.clientY;
    }

    createScratch(x, y);

    scratches++;
    if (scratches % 5 === 0) { // –ö–∞–∂–¥—ã–µ 5 —Ü–∞—Ä–∞–ø–∏–Ω –ø—Ä–æ–¥–≤–∏–≥–∞–µ–º —Ç—Ä–µ—â–∏–Ω—É
      crackStage++;
      if (crackStage < maxCrackStage) {
        egg.src = `egg_${crackStage}.png`;
      } else {
        hatchEgg();
      }
    }
  }

  egg.addEventListener('mousemove', handleMove);
  egg.addEventListener('touchmove', handleMove);

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —è–π—Ü—É
  egg.addEventListener('click', () => {
    if (isHatched) return;

    crackStage++;
    if (crackStage < maxCrackStage) {
      egg.src = `egg_${crackStage}.png`;
    } else {
      hatchEgg();
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞
  pet.addEventListener('mousemove', (event) => {
    const rect = pet.getBoundingClientRect();
    const x = event.clientX - rect.left; // –ü–æ–∑–∏—Ü–∏—è –º—ã—à–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–∏—Ç–æ–º—Ü–∞
    rotation = (x / rect.width) * 360; // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞
    pet.style.transform = `rotateY(${rotation}deg)`; // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–≤–æ—Ä–æ—Ç
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞ (—Å–µ–Ω—Å–æ—Ä–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
  pet.addEventListener('touchmove', (event) => {
    const touch = event.touches[0];
    const rect = pet.getBoundingClientRect();
    const x = touch.clientX - rect.left; // –ü–æ–∑–∏—Ü–∏—è –∫–∞—Å–∞–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–∏—Ç–æ–º—Ü–∞
    rotation = (x / rect.width) * 360; // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞
    pet.style.transform = `rotateY(${rotation}deg)`; // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–≤–æ—Ä–æ—Ç
  });

  const createBattleButton = document.getElementById('create-battle');
  const battleResult = document.getElementById('battle-result');

  // –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤
  const opponents = ["–î—Ä–∞–∫–æ–Ω", "–ì–æ–±–ª–∏–Ω", "–û—Ä–∫", "–í–æ–ª–∫", "–¢—Ä–æ–ª–ª—å"];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å —Å—Ä–∞–∂–µ–Ω–∏–µ"
  createBattleButton.addEventListener('click', () => {
    const opponent = opponents[Math.floor(Math.random() * opponents.length)]; // –°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫
    const result = Math.random() > 0.5 ? "–ø–æ–±–µ–¥–∞" : "–ø–æ—Ä–∞–∂–µ–Ω–∏–µ"; // –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    if (result === "–ø–æ–±–µ–¥–∞") {
      battleResult.innerHTML = `<p>–í—ã –ø–æ–±–µ–¥–∏–ª–∏ ${opponent}! üéâ</p>`;
    } else {
      battleResult.innerHTML = `<p>–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${opponent}. üò¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!</p>`;
    }
  });

  const generateQuestButton = document.getElementById('generate-quest');
  const questResult = document.getElementById('quest-result');

  // –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤
  const quests = [
    "–°–æ–±–µ—Ä–∏—Ç–µ 10 –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç",
    "–ü–æ–±–µ–¥–∏—Ç–µ 3 –≤—Ä–∞–≥–æ–≤",
    "–ù–∞–π–¥–∏—Ç–µ —Ä–µ–¥–∫–æ–µ —è–π—Ü–æ –ø–∏—Ç–æ–º—Ü–∞",
    "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∑–∞–±—Ä–æ—à–µ–Ω–Ω—ã–π –∑–∞–º–æ–∫",
    "–°–æ–±–µ—Ä–∏—Ç–µ 5 –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤",
    "–ü–æ–º–æ–≥–∏—Ç–µ –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–æ–º—É –∂–∏—Ç–µ–ª—é –Ω–∞–π—Ç–∏ –µ–≥–æ –∫–æ—Ç–∞",
    "–ü–æ–±–µ–¥–∏—Ç–µ –±–æ—Å—Å–∞ –≤ PvP-—Å—Ä–∞–∂–µ–Ω–∏–∏"
  ];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–≤–µ—Å—Ç"
  generateQuestButton.addEventListener('click', () => {
    const randomQuest = quests[Math.floor(Math.random() * quests.length)]; // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –∫–≤–µ—Å—Ç–∞
    questResult.innerHTML = `<p>–í–∞—à –∫–≤–µ—Å—Ç: ${randomQuest}</p>`;
  });
});
